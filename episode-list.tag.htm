<xsl>
	<xsl:template match='*'>
		<img src='{//channel/image/url}' />
		<h1>
			<xsl:value-of select='//channel/title' />
		</h1>
		<p>
			<xsl:value-of select='//channel/description' />
		</p>



		<table class='stripes'>
			<xsl:for-each select='//item'>
				<tr url='{*[starts-with(@url,"https:")]/@url}' on-tap='play'>
					<td class='date'>
						<time-format class='month' time='{pubDate}' format='MMM'></time-format>
						<time-format class='day' time='{pubDate}' format='DD'></time-format>
						<time-format class='year' time='{pubDate}' format='YYYY'></time-format>
						<!-- <div class='month'>NOV</div>
						<div class='day'>29</div>
						<div class='year'>2020</div> -->
					</td>
					<td>
						<h3>

							<xsl:value-of select='title' />
						</h3>
						<p>
							<xsl:value-of select='description' />
						</p>
					</td>
				</tr>
			</xsl:for-each>
		</table>
	</xsl:template>
</xsl>

<style>
	@import url('https://max.pub/css/base.css');
	@import url('https://max.pub/css/josefin.css');

	img {
		width: 100px;
	}


	p {
		font-size: 14px;
		text-align: justify;
		margin: .2em 0;
		padding: .2em 0;
	}

	h3 {
		margin: 0;
		padding: 0;
		font-size: 17px;
		font-weight: 300;
		text-align: justify;
	}

	.stripes tr:nth-child(2n) {
		background: #2a2a2a;
	}

	td {
		vertical-align: top;
		padding: .3rem
	}

	td:hover {
		background: var(--back-mark);
		cursor: pointer;
	}

	.date>* {
		font-weight: 100;
		text-align: center;
		color: silver;
		display: block;
	}

	.year {
		font-size: 10px;
	}

	.month {
		font-size: 11px;
		text-transform: uppercase;
	}

	.day {
		font-size: 22px;
	}
</style>

<script>
	const list = {
		bbc: `https://podcasts.files.bbci.co.uk/p02nq0gn.rss`, // bbc global news
		freu: `https://beste-freundinnen.podigee.io/feed/mp3`, // beste freundinnen
		handel: `https://handelsblatt-morningbriefing.podigee.io/feed/mp3`, // handelsblatt morning briefing
		eco: `https://www.economist.com/media/rss/economist.xml`, // economist
	}
	import 'https://max.pub/time/dist/time-format.tag.js'
	class {
		async $onReady() {
			let podcast = document.location.hash.slice(1) || 'bbc';
			console.log('load',podcast)
			this.$data = await fetch(list[podcast]).then(x => x.text())
			console.log('data', this.$data)
		}
		play(node) {
			let url = node.getAttribute('url')
			// console.log('play', url)
			this.$event('play', { url })
			// let player = this.$view.Q('audio', 1);
			// player.innerHTML = `<source src="${url}" type="audio/mpeg" />`;
			// player.load()
			// player.play();
			// let src = this.$view.Q('audio>source', 1);
			// console.log('src', src)
			// src.setAttribute('src', url)
			// this.$view.Q('audio', 1).play()
		}
	}
</script>